const encrypt = (plaintext, key) => {
    const chars = plaintext.split("")
    const keys = key.toUpperCase().split("")
    const keylen = key.length
    let counter = 0

    const ciphertext = chars.map( (c, i) => {
        const k = keys[(i - counter) % keylen].charCodeAt(0) - 65
        const char = c.charCodeAt(0)
        
        if(char > 64 && char < 91)
        {
            return String.fromCharCode(65 + (char + k) % 65 % 26)
        }
        else if(char > 96 && char < 123)
        {
            return String.fromCharCode(97 + (char + k) % 97 % 26)
        }
        else
        {
            counter++
            return String.fromCharCode(char)
        }
    })

    return ciphertext.join("")
}

const decrypt = (ciphertext, key) => {
    const inverseKey = key.toUpperCase().split("").map( c => String.fromCharCode(156 - c.charCodeAt(0))).join("")
    return encrypt(ciphertext, inverseKey)
}
const ciphertext = `FXWCR SURSR NJCDL IRZGV MRYJS HJEVH FXYZQ LWRWT OZVVN EDWVD XNLYY DQRUL VJJIP FESTG XQRWN FQZJL SXWMV FTMHW FILFR IKXWE GFPWT MLXZW FEXRS HWFIM FXXVV FEGKC DYJNS FZSKR GVRHT XUZHI SBKFU JZJSI HXZGJ EWXZQ RFVYT DXVVY YHWVZ FJQTK KNEJY FUJGR WKZMZ FMZVS FWFIH FCVZI SWZVJ RVABV LIRZG KFUDQ IHFUB AVWYV GFCRY FIYYH RRQIW RZEGS FWMZQ LKRWV STIWY YHGIH FBWMI RZXKH RPJNK JERSV RKKKJ CDSUO FULJJ PJEWN FQJUW MRWXY HBRVX RGYFV JVKJI SWVYN FXXIH XZGJE WQVDA VVTJX IUHSC BGLWL CDIKK FKWMV BMRGG VHSRE QVWTI HHFPR VQIJX HYDSZ FJIHU CDHVP JEWKF UYYHK CDYZP NXKYY DAVPN JVJUW MVLRG RWKDS THTWW MZVGL WBVKJ RUIKK JJDRV VYFUD RWYYU JVGNW IJIHS KDIUU JJVJJ LSKKJ VDXKH SURKC RSURS ROQNL YYWMV VFDHI VSFIW ZIHIR WJRQI KKFKF TZQHZ GJUZN KKYYH TILLZ QFCDW ILARO TWWMV VUPFQ ZVYKR ZILSX JWFXU WUTDQ TIITC NTEHT WWMVO FEGQR GNVVM RGXFP JNKFK ITIWZ ZWTLV QPNJG WFIHH FUIFI YYHHF PNEJX RQIXR NEJXF IMVUW VVNUH SKVFE GBRVF SOJKR IVVHI LGVYN JLYFU XKRYY HIVSF IWJUW JEDSK WMVUJ YDISH JEDSZ QHIHF JHNEW MVQZD EJIRA VUYYH YYUJV ZJVNX CHFUL SXXUK RYYHN IGJGD WKXWV DSUWM RWIRW JTRNE FNUHI NLYYW MVDWI LAROT WWMVV UPFQZ VYKRZ ILSXJ WFXUZ QYYHZ BLHZU HLOFK HIUHX TUNGW NFQXF IYYHI VSFIW JUWJE DSKVY FRZID LVQYJ DYKKJ GRWKD ZKKTI LYZHX RQIKK JPZJI HFSOJ KRHFQ KZURK KFKDL IRZGP FKFMZ QLKKJ UHXTU NGWNF QMRGQ VIYKK JTRZE WWPWM VGFPD KKHWK KJJSD TONJW LIRZG DWILA VGFKN NEJXT UTJVT LUFXH SKVFE GFBHQ RJWFX UJLSV VXVAF EGPVQ YNHWV DXBHI KRWVS TIWTE WMVVU PFQZV YXUTL SXZQY YHNIQ JZJMS RZIKT FGXRQ ISRYY WJRPX JHSKP JRONJ WTWWM VWTLU NEJUR UYZHX IHHFQ HZONE JYYHR RJFZQ XKWMV SFIWD FIYNH SKBYY DYJHY FIKWU TDONE FTCQB VKFMH QFVYR QTKKJ IINMH FCRSX WMVZF POZTN NCBYY HFBHQ RJWFX UZQJJ VJOKF UEJVQ BRWHY LSXIT IWMVG JGDWK XWVIW FPYYH JRVYV QIRQI JRBVN SFZYY DYKKJ WXQCW BVQYP VJKRK WDQFQ LKKJK KFDHX ZQYNR LIRZG VTWWJ EZNKK JZJMK DWILA ZQLZQ XNDQV DSUVJ MHSRW HRQJN GTEWM VDHIR XKLHZ QYYHQ RVYKH QVJWR PBVLS KHWTH UKHIJ SJCOJ URZKW MVPJJ VFXHF KWFIJ JKUIW DSULW RQYYD YGDXK PDRLW DLSZV YIBHF QYRFY JZMFD YCDXK DLIHJ UWTSU NVIRV RSKKJ ZUHFQ HVUSJ UIWVY RQIJI TIUFU LTULW VFYZR SRQIW LSULS XLVLH XKLTE HIKKN JWMZQ PZQLZ WBRVF EHWIR WRQIK KFKWM VBRVD SKUFU LTULW VFYZR SWLSU LSXWM VQFML LRWNF QXPVY VPBVX XVEZK DUGDW VQYCB YYLXZ VXFPJ KKNEJ SVZKI RRKKJ SRKWL SJRSK KJKLE RUITR RDLYK HJKKJ PFFCO NKFMR LSYRR VDSUL YIHKV UXKRF EHBRH WFSQR QJUHY VFYZR SJBXK HRKKF KXXVV WVIQV FYZRS FIWRG NFZFM HXKRW RQLVI NEGFJ ZJCOF JLSUL HRWJS HFILS XIWFP FZUYY UJRWX KKJPK FMHGV HSVAU VUNDH SKLSX ZNKKY YLXWR WRZMZ OJRQI RUJER BSXNC GNEJT LWFJH WZHXF IRRVY JWTXL AVIWF QYCLS VZFIQ NEJTW DNIDY KDHBV YYHKZ UXKIJ NVYRW NFQXR UJSHN EJGLL QKLSE RWWRQ BONEF TCQFE GJJVJ OWTGU TMLIV DWZQL FIIVI JEFJR UTLQI CRSUR SRQIZ WQFRP JONBH TLUXG BHCLX KIWZH SUVFI HMLQY ZQLWR WZQKF URRWN FQFSR ZKWMZ VYVFM ERQFJ DZWNJ QTKFQ VDWZI YYHDB QTNZM RWNKL XSXYZ WNJFJ IWFZQ YYDYN HMRYJ KRXKR UKKJD INEGN EJTLW NRPFC VTERY JXWVZ MRWYY HRZVX ZQLGD WKBRV PGVUX RUJUR NEJNK FFEWG VMZJW RFUJJ SDZQL RVYYH NIFTM HWNLY YWMVW TLUNE JURUY ZHXRO QFZJU WMVPF JPZTK FTFJJ VFJWM VBBVU JCLPV ODKRL VWXFV TDHYY LSXHQ JHNJX UZDRY RUZQL KKFKW MVDYK DHYHI ZQYVU HVSYN LQCJN MHZJD HCXJN HFEDQ PVJUW MVHST UDGWJ UWJCH LIDRR QIWRZ EGYYD YZWZJ HXRFQ RVXZF FUILM AHZSM VUNKX XVVYY HXRPJ BHDNR WUITI WMVWW RQXGR XZWNF QXKDL VRKKK JTLUY HWRVN YDAVX XVGKF UYYLX MLLVQ JIHHZ SMVUF EGPER BZQLK KFKLY JKTLO ISHWV DXFQF SODJW WRLLY WKFUB RUIKR HIDHB WMVLW DHXJD LVEZK BTLZN COMRY JKRHY HHBWM VGJKD NCVKF UDFXW JHQWD XZKFM HYFJT YDWIB MRVFJ NJUPJ KRYID AVOYF FFZVY FUYFV JKXUR FTDPF EGUFV YRWYY HWUIY FZJIL STDXV ZJEHJ UWTRF YHXNT NQPLK NHHRQ HIDHB WMZVT EHFEG BFUPF XYNKF KLXXR NEJTE WMVQN YRUVZ JTDSD RZEWF TRZEW JIWTK KJJSD TONJW TGHWR WNFQG VITIH NKVZT FJVGX GHFIO`
console.log(decrypt(ciphertext, "RDF"))